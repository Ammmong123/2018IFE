{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/san/dist/san.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","g","this","Function","eval","window","_typeof","webpackPolyfill","deprecate","paths","children","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","global","undefined","setImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","toString","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","Math","random","event","source","data","indexOf","slice","addEventListener","attachEvent","MessageChannel","port1","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","callback","task","clearImmediate","self","scope","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","root","guidIndex","guidPrefix","Date","getTime","guid","empty","extend","target","key","inherits","subClass","superClass","subClassProto","F","constructor","each","iterator","bind","func","thisArg","nativeBind","el","eventName","listener","capture","splitStr2Obj","result","split","svgTags","createEl","tagName","createElementNS","removeEl","parentNode","nextHandler","nextTasks","isNativePromise","Promise","test","fn","tasks","port","resolve","then","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","createChainableChecker","validate","chainedChecker","isRequired","DataTypes","string","number","bool","symbol","any","arrayOf","instanceOf","shape","oneOf","oneOfType","objectOf","exact","Walker","index","createANode","options","textExpr","directives","props","events","kebab2camel","replace","alpha","toUpperCase","currentCode","charCode","cut","start","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","lastIndex","exec","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","createAccessor","type","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","parseText","delimiters","exprMatch","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","directiveParsers","for","if","elif","else","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","colonIndex","modifier","parser","integrateProp","vars","xMatch","x","seg","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stack","stackIndex","beforeLastIndex","tagEnd","toLowerCase","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","splice","tbodyNode","DEFAULT_FILTERS","url","encodeURIComponent","_class","join","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","filter","filterName","evalArgs","buf","set","dataCacheSource","dataCacheClearly","clear","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","max","filterResult","lifeCycleOwnIs","LifeCycle","compiled","is","inited","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","state","oper","bindValue","bindType","bindChecked","hintExpr","option","parentSelect","parent","selectValue","nodeType","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","listen","unlisten","fire","silent","silence","quiet","callee","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","pop","shift","unshift","removeAt","remove","hotTags","isBrowser","insertBefore","targetEl","parentEl","beforeEl","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","createTextNode","attach","content","createComment","tempFlag","insertAdjacentHTML","dispose","_prev","textUpdateProp","textContent","unionKeys","obj1","obj2","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","next","child","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","_spreadData","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","me","initData","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","directive","createForDirectiveChild","itemScope","itemANode","param","_create","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","bindDirective","newBindData","keys","propValue","dynamicProps","j","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","originalUpdate","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","parentFirstChild","parentLastChild","lastChild","isOnlyParentChild","newList","newLen","cIndex","cLen","forLen","changeIndex","_splice","_set","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","nextChild","childANode","newChild","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","givenANode","elementLeave","leave","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","removeEventListener","detachEvent","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","protoANode","givenNamedSlotBinds","binds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","components","componentClass","_cmptReady","tpl","template","componentPropExtra","extra","analyseExprs","slotBind","givenSlotInited","slotName","_callHook","declaration","un","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","_aftercreated","dataName","dataExpr","san","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","bt","body"],"mappings":"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","file":"app.4d7341b1c74aba85d655.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\n// var ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n// \n// /**\n//  * 获取精确的类型\n//  *\n//  * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n//  *\n//  * @param  {*} obj 目标\n//  * @return {string}\n//  */\n// function getDataType(obj) {\n// \n//     if (obj && obj.nodeType === 1) {\n//         return 'element';\n//     }\n// \n//     return Object.prototype.toString\n//         .call(obj)\n//         .slice(8, -1)\n//         .toLowerCase();\n// }\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n//     var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n// \n//         var dataValue = data[dataName];\n//         var dataType = getDataType(dataValue);\n// \n//         componentName = componentName || ANONYMOUS_CLASS_NAME;\n// \n//         // 如果是 null 或 undefined，那么要提前返回啦\n//         if (dataValue == null) {\n//             // 是 required 就报错\n//             if (isRequired) {\n//                 throw new Error('[SAN ERROR] '\n//                     + 'The `' + dataName + '` '\n//                     + 'is marked as required in `' + componentName + '`, '\n//                     + 'but its value is ' + dataType\n//                 );\n//             }\n//             // 不是 required，那就是 ok 的\n//             return;\n//         }\n// \n//         validate(data, dataName, componentName, fullDataName);\n// \n//     };\n// \n//     chainedChecker = bind(checkType, null, false);\n//     chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n// /**\n//  * 生成主要类型数据校验器\n//  *\n//  * @param  {string} type 主类型\n//  * @return {Function}\n//  */\n// function createPrimaryTypeChecker(type) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n// \n//         var dataValue = data[dataName];\n//         var dataType = getDataType(dataValue);\n// \n//         if (dataType !== type) {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n//                 + '(' + dataType + ' supplied to ' + componentName + ', '\n//                 + 'expected ' + type + ')'\n//             );\n//         }\n// \n//     });\n// \n// }\n// \n// \n// \n// /**\n//  * 生成 arrayOf 校验器\n//  *\n//  * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n//  * @return {Function}\n//  */\n// function createArrayOfChecker(arrayItemChecker) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n// \n//         if (typeof arrayItemChecker !== 'function') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n//                 + 'DataType notation inside `arrayOf`, expected `function`'\n//             );\n//         }\n// \n//         var dataValue = data[dataName];\n//         var dataType = getDataType(dataValue);\n// \n//         if (dataType !== 'array') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n//                 + '(' + dataType + ' supplied to ' + componentName + ', '\n//                 + 'expected array)'\n//             );\n//         }\n// \n//         for (var i = 0, len = dataValue.length; i < len; i++) {\n//             arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n//         }\n// \n//     });\n// \n// }\n// \n// /**\n//  * 生成 instanceOf 检测器\n//  *\n//  * @param  {Function|Class} expectedClass 期待的类\n//  * @return {Function}\n//  */\n// function createInstanceOfChecker(expectedClass) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n// \n//         var dataValue = data[dataName];\n// \n//         if (dataValue instanceof expectedClass) {\n//             return;\n//         }\n// \n//         var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n//             ? dataValue.constructor.name\n//             : ANONYMOUS_CLASS_NAME;\n// \n//         var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n// \n//         throw new Error('[SAN ERROR] '\n//             + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n//             + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n//             + 'expected instance of ' + expectedClassName + ')'\n//         );\n// \n// \n//     });\n// \n// }\n// \n// /**\n//  * 生成 shape 校验器\n//  *\n//  * @param  {Object} shapeTypes shape 校验规则\n//  * @return {Function}\n//  */\n// function createShapeChecker(shapeTypes) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n// \n//         if (getDataType(shapeTypes) !== 'object') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n//                 + 'DataType notation inside `shape`, expected `object`'\n//             );\n//         }\n// \n//         var dataValue = data[dataName];\n//         var dataType = getDataType(dataValue);\n// \n//         if (dataType !== 'object') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n//                 + '(' + dataType + ' supplied to ' + componentName + ', '\n//                 + 'expected object)'\n//             );\n//         }\n// \n//         for (var shapeKeyName in shapeTypes) {\n//             if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n//                 var checker = shapeTypes[shapeKeyName];\n//                 if (typeof checker === 'function') {\n//                     checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n//                 }\n//             }\n//         }\n// \n//     });\n// \n// }\n// \n// /**\n//  * 生成 oneOf 校验器\n//  *\n//  * @param  {Array} expectedEnumValues 期待的枚举值\n//  * @return {Function}\n//  */\n// function createOneOfChecker(expectedEnumValues) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n// \n//         if (getDataType(expectedEnumValues) !== 'array') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n//                 + 'DataType notation inside `oneOf`, array is expected.'\n//             );\n//         }\n// \n//         var dataValue = data[dataName];\n// \n//         for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n//             if (dataValue === expectedEnumValues[i]) {\n//                 return;\n//             }\n//         }\n// \n//         throw new Error('[SAN ERROR] '\n//             + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n//             + '(`' + dataValue + '` supplied to ' + componentName + ', '\n//             + 'expected one of ' + expectedEnumValues.join(',') + ')'\n//         );\n// \n//     });\n// \n// }\n// \n// /**\n//  * 生成 oneOfType 校验器\n//  *\n//  * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n//  * @return {Function}\n//  */\n// function createOneOfTypeChecker(expectedEnumOfTypeValues) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n// \n//         if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n//                 + 'DataType notation inside `oneOf`, array is expected.'\n//             );\n//         }\n// \n//         var dataValue = data[dataName];\n// \n//         for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n// \n//             var checker = expectedEnumOfTypeValues[i];\n// \n//             if (typeof checker !== 'function') {\n//                 continue;\n//             }\n// \n//             try {\n//                 checker(data, dataName, componentName, fullDataName);\n//                 // 如果 checker 完成校验没报错，那就返回了\n//                 return;\n//             }\n//             catch (e) {\n//                 // 如果有错误，那么应该把错误吞掉\n//             }\n// \n//         }\n// \n//         // 所有的可接受 type 都失败了，才丢一个异常\n//         throw new Error('[SAN ERROR] '\n//             + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n//             + '(`' + dataValue + '` supplied to ' + componentName + ')'\n//         );\n// \n//     });\n// \n// }\n// \n// /**\n//  * 生成 objectOf 校验器\n//  *\n//  * @param  {Function} typeChecker 对象属性值校验器\n//  * @return {Function}\n//  */\n// function createObjectOfChecker(typeChecker) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n// \n//         if (typeof typeChecker !== 'function') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n//                 + 'DataType notation inside `objectOf`, expected function'\n//             );\n//         }\n// \n//         var dataValue = data[dataName];\n//         var dataType = getDataType(dataValue);\n// \n//         if (dataType !== 'object') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n//                 + '(' + dataType + ' supplied to ' + componentName + ', '\n//                 + 'expected object)'\n//             );\n//         }\n// \n//         for (var dataKeyName in dataValue) {\n//             if (dataValue.hasOwnProperty(dataKeyName)) {\n//                 typeChecker(\n//                     dataValue,\n//                     dataKeyName,\n//                     componentName,\n//                     fullDataName + '.' + dataKeyName\n//                 );\n//             }\n//         }\n// \n// \n//     });\n// \n// }\n// \n// /**\n//  * 生成 exact 校验器\n//  *\n//  * @param  {Object} shapeTypes object 形态定义\n//  * @return {Function}\n//  */\n// function createExactChecker(shapeTypes) {\n// \n//     return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n// \n//         if (getDataType(shapeTypes) !== 'object') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n//                 + 'DataType notation inside `exact`'\n//             );\n//         }\n// \n//         var dataValue = data[dataName];\n//         var dataValueType = getDataType(dataValue);\n// \n//         if (dataValueType !== 'object') {\n//             throw new Error('[SAN ERROR] '\n//                 + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n//                 + '(supplied to ' + componentName + ', expected `object`)'\n//             );\n//         }\n// \n//         var allKeys = {};\n// \n//         // 先合入 shapeTypes\n//         extend(allKeys, shapeTypes);\n//         // 再合入 dataValue\n//         extend(allKeys, dataValue);\n//         // 保证 allKeys 的类型正确\n// \n//         for (var key in allKeys) {\n//             if (allKeys.hasOwnProperty(key)) {\n//                 var checker = shapeTypes[key];\n// \n//                 // dataValue 中有一个多余的数据项\n//                 if (!checker) {\n//                     throw new Error('[SAN ERROR] '\n//                         + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n//                         + 'supplied to `' + componentName + '`. '\n//                         + '(`' + key + '` is not defined in `DataTypes.exact`)'\n//                     );\n//                 }\n// \n//                 if (!(key in dataValue)) {\n//                     throw new Error('[SAN ERROR] '\n//                         + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n//                         + 'supplied to `' + componentName + '`. '\n//                         + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n//                     );\n//                 }\n// \n//                 checker(\n//                     dataValue,\n//                     key,\n//                     componentName,\n//                     fullDataName + '.' + key,\n//                     secret\n//                 );\n// \n//             }\n//         }\n// \n//     });\n// \n// }\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\n// DataTypes = {\n// \n//     any: createChainableChecker(empty),\n// \n//     // 类型检测\n//     array: createPrimaryTypeChecker('array'),\n//     object: createPrimaryTypeChecker('object'),\n//     func: createPrimaryTypeChecker('function'),\n//     string: createPrimaryTypeChecker('string'),\n//     number: createPrimaryTypeChecker('number'),\n//     bool: createPrimaryTypeChecker('boolean'),\n//     symbol: createPrimaryTypeChecker('symbol'),\n// \n//     // 复合类型检测\n//     arrayOf: createArrayOfChecker,\n//     instanceOf: createInstanceOfChecker,\n//     shape: createShapeChecker,\n//     oneOf: createOneOfChecker,\n//     oneOfType: createOneOfTypeChecker,\n//     objectOf: createObjectOfChecker,\n//     exact: createExactChecker\n// \n// };\n// /* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n// \n// /**\n//  * 创建数据检测函数\n//  *\n//  * @param  {Object} dataTypes     数据格式\n//  * @param  {string} componentName 组件名\n//  * @return {Function}\n//  */\n// function createDataTypesChecker(dataTypes, componentName) {\n// \n//     /**\n//      * 校验 data 是否满足 data types 的格式\n//      *\n//      * @param  {*} data 数据\n//      */\n//     return function (data) {\n// \n//         for (var dataTypeName in dataTypes) {\n// \n//             if (dataTypes.hasOwnProperty(dataTypeName)) {\n// \n//                 var dataTypeChecker = dataTypes[dataTypeName];\n// \n//                 if (typeof dataTypeChecker !== 'function') {\n//                     throw new Error('[SAN ERROR] '\n//                         + componentName + ':' + dataTypeName + ' is invalid; '\n//                         + 'it must be a function, usually from san.DataTypes'\n//                     );\n//                 }\n// \n//                 dataTypeChecker(\n//                     data,\n//                     dataTypeName,\n//                     componentName,\n//                     dataTypeName\n//                 );\n// \n// \n//             }\n//         }\n// \n//     };\n// \n// }\n// \n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            case 32:\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @return {Array}\n */\nWalker.prototype.match = function (reg) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match) {\n        this.index = reg.lastIndex;\n    }\n\n    return match;\n};\n\n// exports = module.exports = Walker;\n\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: match[1] - 0\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig);\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n        case 45: // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n        case 40: // (\n            return readParenthesizedExpr(walker);\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - exprMatch[0].length\n        ));\n\n        var interp = parseInterp(exprMatch[1]);\n        expr.original = expr.original || interp.original;\n\n        expr.segs.push(interp);\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n//         throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'bind': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\n// function getXPath(stack, currentTagName) {\n//     var path = ['ROOT'];\n//     for (var i = 1, len = stack.length; i < len; i++) {\n//         path.push(stack[i].tagName);\n//     }\n//     if (currentTagName) {\n//         path.push(currentTagName);\n//     }\n//     return path.join('>');\n// }\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n//             // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n//             if (autoCloseTags[tagName]) {\n//                 throw new Error(''\n//                     + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n//                     + 'so it cannot be closed with </' + tagName + '>'\n//                 );\n//             }\n// \n//             // 如果关闭的 tag 和当前打开的不一致，报错\n//             if (\n//                 stack[closeIndex].tagName !== tagName\n//                 // 这里要把 table 自动添加 tbody 的情况给去掉\n//                 && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n//             ) {\n//                 throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n//             }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n//         // 处理 </xxx 非正常闭合标签\n//         else if (tagEnd) {\n// \n//             // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n//             if (walker.currentCode() === 60) {\n//                 throw new Error(''\n//                     + '[SAN ERROR] ' + getXPath(stack)\n//                     + '\\'s close tag not closed'\n//                 );\n//             }\n// \n//             // 闭合标签有属性\n//             throw new Error(''\n//                 + '[SAN ERROR] ' + getXPath(stack)\n//                 + '\\'s close tag has attributes'\n//             );\n// \n//         }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n//                 // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n//                 if (nextCharCode === 60) {\n//                     throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n//                 }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n//                     // 如果属性有 =，但没取到 value，报错\n//                     if (\n//                         walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n//                         && !attrMatch[2]\n//                     ) {\n//                         throw new Error(''\n//                             + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n//                             + attrMatch[1] + '` is not wrapped with \"\"'\n//                         );\n//                     }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n//                     if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n//                         throw new Error('[SAN FATEL] else not match if.');\n//                     }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        value = value == null ? '' : value\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// // 以下两个函数只在开发模式下可用，在生产模式下不存在\n// /**\n//  * DataTypes 检测\n//  */\n// Data.prototype.checkDataTypes = function () {\n//     if (this.typeChecker) {\n//         this.typeChecker(this.raw);\n//     }\n// };\n// \n// /**\n//  * 设置 type checker\n//  *\n//  * @param  {Function} typeChecker 类型校验器\n//  */\n// Data.prototype.setTypeChecker = function (typeChecker) {\n//     this.typeChecker = typeChecker;\n// };\n// \n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n//     var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n//     if (expr.type !== ExprType.ACCESSOR) {\n//         throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n//     }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n//     this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n//     var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n//     if (expr.type !== ExprType.ACCESSOR) {\n//         throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n//     }\n// \n//     if (typeof this.get(expr) !== 'object') {\n//         throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n//     }\n// \n//     if (typeof source !== 'object') {\n//         throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n//     }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n//     var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n//     if (expr.type !== ExprType.ACCESSOR) {\n//         throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n//     }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n//     if (typeof fn !== 'function') {\n//         throw new Error(\n//             '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n//             + 'Expected Function but got ' + typeof fn\n//         );\n//     }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n//     var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n//     if (expr.type !== ExprType.ACCESSOR) {\n//         throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n//     }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        var len = target.length;\n        if (index > len) {\n            index = len;\n        }\n        else if (index < 0) {\n            index = len + index;\n            if (index < 0) {\n                index = 0;\n            }\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n//     this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\n\n// exports = module.exports = hotTags;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n// /**\n//  * 获取节点 stump 的 comment\n//  *\n//  * @param {HTMLElement} el HTML元素\n//  */\n// function warnSetHTML(el) {\n//     // dont warn if not in browser runtime\n//     if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n//         return;\n//     }\n// \n//     // some html elements cannot set innerHTML in old ie\n//     // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n//     if (noSetHTML(el)) {\n//         var message = '[SAN WARNING] set html for element \"' + el.tagName\n//             + '\" may cause an error in old IE';\n//         /* eslint-disable no-console */\n//         if (typeof console === 'object' && console.warn) {\n//             console.warn(message);\n//         }\n//         else {\n//             throw new Error(message);\n//         }\n//         /* eslint-enable no-console */\n//     }\n// }\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n//                     warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 计算两个对象 key 的并集\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 计算两个对象 key 的并集\n *\n * @param {Object} obj1 目标对象\n * @param {Object} obj2 源对象\n * @return {Array}\n */\nfunction unionKeys(obj1, obj2) {\n    var result = [];\n\n    for (var key in obj1) {\n        result.push(key);\n    }\n\n    for (var key in obj2) {\n        !obj1[key] && result.push(key);\n    }\n\n    return result;\n}\n\n// exports = module.exports = unionKeys;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var unionKeys = require('../util/union-keys');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    if (aNode.directives.bind) {\n        this._spreadData = evalExpr(aNode.directives.bind.value, this.scope, this.owner);\n    }\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    // update s-bind\n    var bindDirective = this.aNode.directives.bind;\n    if (bindDirective) {\n        var len = changes.length;\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, bindDirective.value, this.scope)) {\n                var newBindData = evalExpr(bindDirective.value, this.scope, this.owner);\n                var keys = unionKeys(newBindData, this._spreadData);\n\n                for (var i = 0; i < keys.length; i++) {\n                    var key = keys[i];\n                    var propValue = newBindData[key];\n\n                    if (!(key in this.aNode.hotspot.props) && propValue !== this._spreadData[key]) {\n                        getPropHandler(this.tagName, key).prop(this.el, propValue, key, this);\n                    }\n                }\n\n                this._spreadData = newBindData;\n                break;\n            }\n        }\n    }\n\n    // update prop\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    // update content\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        var len = changes.length;\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, htmlDirective.value, this.scope)) {\n                // #[begin] error\n//                 warnSetHTML(this.el);\n                // #[end]\n\n                this.el.innerHTML = evalExpr(htmlDirective.value, this.scope, this.owner);\n                return false;\n            }\n        }\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent);\n    }\n\n\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    var initData = {};\n    each(realANode.vars, function (varItem) {\n        me.isScoped = true;\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n    });\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (this.isScoped) {\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            each(this.aNode.vars, function (varItem) {\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n\n            var scopedChanges = [];\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var key in this._spreadData) {\n            getPropHandler(this.tagName, key).prop(this.el, this._spreadData[key], key, this);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\n    var directive = aNode && aNode.directives.transition;\n    var owner = element.owner;\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n// /**\n//  * 事件绑定不存在的 warning\n//  *\n//  * @param {Object} eventBind 事件绑定对象\n//  * @param {Component} owner 所属的组件对象\n//  */\n// function warnEventListenMethod(eventBind, owner) {\n//     var valid = true;\n//     var method = owner;\n//     each(eventBind.expr.name.paths, function (path) {\n//         if (!path.value) {\n//             return false;\n//         }\n// \n//         method = method[path.value];\n//         valid = !!method;\n//         return valid;\n//     });\n// \n//     if (!valid) {\n//         var paths = [];\n//         each(eventBind.expr.name.paths, function (path) {\n//             paths.push(path.value);\n//         });\n//         var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n// \n//         /* eslint-disable no-console */\n//         if (typeof console === 'object' && console.warn) {\n//             console.warn(message);\n//         }\n//         else {\n//             throw new Error(message);\n//         }\n//         /* eslint-enable no-console */\n//     }\n// }\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n//         warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    element._spreadData = null;\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\n// var san4devtool;\n// \n// /**\n//  * 给 devtool 发通知消息\n//  *\n//  * @param {string} name 消息名称\n//  * @param {*} arg 消息参数\n//  */\n// function emitDevtool(name, arg) {\n//     if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n//         window.__san_devtool__.emit(name, arg);\n//     }\n// }\n// \n// emitDevtool.start = function (main) {\n//     san4devtool = main;\n//     emitDevtool('san', main);\n// };\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var unionKeys = require('../util/union-keys');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n//             warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n\n        // init s-bind data\n        if (this.givenANode.directives.bind && this.scope) {\n            this._spreadData = evalExpr(this.givenANode.directives.bind.value, this.scope, this.owner);\n        }\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data || this._spreadData\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n//     // 在初始化 + 数据绑定后，开始数据校验\n//     // NOTE: 只在开发版本中进行属性校验\n//     var dataTypes = this.dataTypes || clazz.dataTypes;\n//     if (dataTypes) {\n//         var dataTypeChecker = createDataTypesChecker(\n//             dataTypes,\n//             this.subTag || this.name || clazz.name\n//         );\n//         this.data.setTypeChecker(dataTypeChecker);\n//         this.data.checkDataTypes();\n//     }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nComponent.prototype.getComponentType = function (aNode) {\n    return this.components[aNode.tagName];\n};\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n        this['_after' + name] = 1;\n\n        // 通知devtool\n        // #[begin] devtool\n//         emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n//                 if (!expr) {\n//                     throw new Error('[SAN ERROR] call get method in computed need argument');\n//                 }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        var bindDirective = this.givenANode.directives.bind;\n        if (bindDirective) {\n            var len = changes.length;\n            while (len--) {\n\n                if (changeExprCompare(changes[len].expr, bindDirective.value, this.scope)) {\n                    var newBindData = evalExpr(bindDirective.value, this.scope, this.owner);\n                    var keys = unionKeys(newBindData, this._spreadData);\n\n                    for (var i = 0, l = keys.length; i < l; i++) {\n                        var key = keys[i];\n\n                        if (!(key in this.givenANode.hotspot.props) && newBindData[key] !== this._spreadData[key]) {\n                            me.data.set(key, newBindData[key], {\n                                target: {\n                                    id: me.owner.id\n                                }\n                            });\n                        }\n                    }\n\n                    this._spreadData = newBindData;\n                    break;\n                }\n\n            }\n        }\n\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n\n                        updateExpr = changeExpr;\n                    }\n\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                        target: {\n                            id: me.owner.id\n                        }\n                    });\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.created && this._aftercreated) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n//     if (typeof proto !== 'object') {\n//         throw new Error('[SAN FATAL] param must be a plain object.');\n//     }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n//             if (aNode.children.length !== 1 || firstChild.textExpr) {\n//                 throw new Error('[SAN FATAL] template must have a root element.');\n//             }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), !/^(html|bind)$/.test(key));\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, bindDirective) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         if (bindDirective) {\n//             sourceBuffer.addRaw(\n//                 '(function ($bindObj) {for (var $key in $bindObj) {'\n//                 + 'var $value = $bindObj[$key];'\n//             );\n// \n//             if (tagName === 'textarea') {\n//                 sourceBuffer.addRaw(\n//                     'if ($key === \"value\") {'\n//                     + 'continue;'\n//                     + '}'\n//                 );\n//             }\n// \n//             sourceBuffer.addRaw('switch ($key) {\\n'\n//                 + 'case \"readonly\":\\n'\n//                 + 'case \"disabled\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'html += boolAttrFilter($key, escapeHTML($value));\\n'\n//                 + 'break;\\n'\n//                 + 'default:\\n'\n//                 + 'html += attrFilter($key, escapeHTML($value));'\n//                 + '}'\n//             );\n// \n//             sourceBuffer.addRaw(\n//                 '}})('\n//                 + compileExprSource.expr(bindDirective.value)\n//                 + ');'\n//             );\n//         }\n// \n//         sourceBuffer.joinString('>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType(aNode);\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n//         if (aNode.vars) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop,\n//             aNode.directives.bind\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         var givenDataHTML = '{' + givenData.join(',\\n') + '}';\n//         if (aNode.directives.bind){\n//             givenDataHTML = 'extend('\n//                 + compileExprSource.expr(aNode.directives.bind.value)\n//                  + ', '\n//                 + givenDataHTML\n//                 + ')';\n//         }\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')(' + givenDataHTML + ', componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp,\n//         component.aNode.directives.bind\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.5.8';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.5.8',\n\n        // #[begin] devtool\n//         /**\n//          * 是否开启调试。开启调试时 devtool 会工作\n//          *\n//          * @type {boolean}\n//          */\n//         debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n//     emitDevtool.start(san);\n    // #[end]\n})(this);\n","import san from 'san';\n\nvar MyApp = san.defineComponent({\n  template: '<p>{{text}}!</p>',\n\n  initData: function () {\n      return {\n        text: 'Hello world'\n      };\n  }\n});\nvar myApp = new MyApp();\nmyApp.attach(document.body);"],"sourceRoot":""}